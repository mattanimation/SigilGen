
var data;

function preload(){
  data = loadJSON('assets/aliceInWonderland.json');
}


function setup() {
  var wh = 640;
  var hwh = wh/2;
  createCanvas(640,640);
  background(255);
  colorMode(HSB, 360,100,100);
  noStroke();
  
  fill(0);
  
  var startX = hwh;
  var startY = hwh;
  var totalPoints = 150;
  var err = [4.5757640383486535, 4.608026804930539, 4.612209939346503, 4.614424770103695, 4.613215613382893, 4.613309528468005, 4.611004695754251, 4.60351105458814, 4.596087849735861, 4.580517511250242, 4.571131872432013, 4.562693210721976, 4.568348659753482, 4.574584230091968, 4.5923077675601744, 4.606470358051274, 4.605590882410499, 4.607244179221296, 4.60935629035415, 4.616390138916072, 4.622834083349645, 4.62044022696146, 4.615297397769519, 4.613467031892003, 4.619186069262378, 4.62813735081198, 4.630545881432211, 4.614155742516146, 4.618365290549794, 4.615537076892979, 4.6077342985717085, 4.613833887693211, 4.618907258853458, 4.615573273332034, 4.62648307571904, 4.62944531402857, 4.642890823713561, 4.651498728233227, 4.660049892388965, 4.675672079827824, 4.696761886127963, 4.695311093719429, 4.698456270788498, 4.693541381334379, 4.694879671297205, 4.694469771081982, 4.686360790451976, 4.695380551751133, 4.692210917628655, 4.692166894932508, 4.699084327920182, 4.707518098219536, 4.712388964977506, 4.719259440422625, 4.7175220113480805, 4.724364116611236, 4.735227939737822, 4.749009000195658, 4.735324789669342, 4.736977108198007, 4.733085501858737, 4.734298571708082, 4.74406182743103, 4.7345578164742745, 4.729279006065348, 4.722602230483272, 4.71892486793191, 4.7260643709645835, 4.709753472901584, 4.700954803365293, 4.691308941498726, 4.6858471923302645, 4.678798669536291, 4.659974564664447, 4.643328115828605, 4.642672666797103, 4.629419878693015, 4.625560555664255, 4.629502054392488, 4.6256153394639, 4.621096654275095, 4.604858149090196, 4.597280375660341, 4.584067697123845, 4.575865779690858, 4.576465466640576, 4.5736900802191345, 4.573784973586382, 4.571433183330074, 4.58224907063197, 4.587686362747014, 4.583492467227546, 4.592891801995694, 4.593041479162588, 4.5877333202895665, 4.585413813343766, 4.588878888671483, 4.589972608100167, 4.597766581882204, 4.601142633535503, 4.609628252788095, 4.615188808452354, 4.618885736646441, 4.629761299158676, 4.646196439053019, 4.645330659362151, 4.64076110350224, 4.63752494619447, 4.643462140481303, 4.650674036392085, 4.666936998630393, 4.667195265114448, 4.671145568381911, 4.662618861279593, 4.665926433183329, 4.666123067892781, 4.658750733711598, 4.667665818822142, 4.660215222070044, 4.648879866953627, 4.636218939542161, 4.642790060653491, 4.64554099002152, 4.660337507337112, 4.65640872627665, 4.648050283701815, 4.648267462336141, 4.644905106632752, 4.644811191547646, 4.646345137937783, 4.653288984543141, 4.652138524750535, 4.648770299354331, 4.6481520250440225, 4.6505595773821184, 4.648964977499514, 4.651859714341617, 4.6526423400508685, 4.645812952455486, 4.635298376051651, 4.636874388573664, 4.627539620426529, 4.642323420074349, 4.643716493836827, 4.650685775777735, 4.648894541185673, 4.641769712385048, 4.635693602034824, 4.631425357072977, 4.623058109958908, 4.611686558403441, 4.607105263157893, 4.5876814713363325, 4.578890628057126, 4.589995108589314, 4.594072588534531, 4.600105654470745, 4.603501271766771, 4.602276462531793, 4.595283701819605, 4.590909802387012, 4.574607708863246, 4.566978086480147, 4.566616122089619, 4.566181764820979, 4.565075327724517, 4.552988651927216, 4.546160242613971, 4.542868323224421, 4.537137546468405, 4.535441205243594, 4.527760712189398, 4.523871062414406, 4.525003913128553, 4.527946585795345, 4.533574642927024, 4.536804930541973, 4.539385638818238, 4.552989630209356, 4.55739385638818, 4.5581040892193325, 4.563759538250832, 4.573815300332619, 4.566865584034437, 4.557186460575228, 4.547824300528275, 4.533530620230877, 4.52965564468793, 4.5298620622187435, 4.5370465662297, 4.542672666797104, 4.554970651535903, 4.5657024065740615, 4.568809430639804, 4.56184895323812, 4.561222852670714, 4.559431618078661, 4.5584073566816725, 4.5585756212091635, 4.565040109567605];
  var randomData = err;//data.sentimentCurve; //makeRandomData(totalPoints);
  var dataMin = min(randomData);
  var dataMax = max(randomData);
  var dataScale = 2;
  var circleRad = 100;
  var x,y =0;
  
  strokeWeight(2);
  strokeJoin(ROUND);
  beginShape();
  
  var theta, angle, dataOffset, distFromCenter = 0;
  
  for(var i=0; i < randomData.length; i++){
      theta = (TWO_PI / (randomData.length -1)); // -1 makes it goe full circle with line
      angle = (theta * i);
      dataOffset = ( map(randomData[i], dataMin, dataMax, 0, 10) * dataScale); //normalize and add scaling
      distFromCenter = circleRad + dataOffset;
      
      x = startX + (distFromCenter * cos(angle));
      y = startY + (distFromCenter * sin(angle));
      
      line(startX, startY, x, y);
      vertex(x,y);
  }
  smooth();
  endShape(CLOSE);
  
  noStroke();
  
  //draw color circle
  //mood or sentiment?
  var h = 175;// random(0,360); //starting hue
  var dia = circleRad *2;
  var hRad = circleRad /2;
  
  for(var d = dia; d >0; d--){
    fill(h, 90,90);
    ellipse(startX, startY, d,d);
    h = (h +1) % 360;
  }
  
  //draw triangle
  //represents fiction or non
  noFill();
  strokeWeight(3);
  stroke(0);
  triangle(startX - hRad, startY + hRad, startX, startY - circleRad, startX + hRad, startY + hRad );
  
  //draw 45 deg lines
  //represent lexicle?
  var lineGap = 10;
  var lineValues = [10,8,6,4,2,5,7,3,1,0];
  strokeWeight(2);
  for(var k=0; k< lineValues.length; k++){
    var lineVal = lineValues[k];
    var offset = (lineGap * k);
    
    var sx = startX - (circleRad) + offset;
    var sy = startY - (circleRad) + offset;
    
    var ex = sx + (lineVal * cos(180)) * 10;
    var ey = sy + (lineVal * sin(180)) * 10;
    //line(sx, sy, ex, ey);
    console.log("x:" + sx + " y:"+ sy);
    
    rect(sx, sy, lineVal * 10, 3);
  }
  
  ellipse(startX + (circleRad/2), startY + (circleRad/3), 25, 25);
  
  //create RadarChart
  //represents genres?
  var rcData = [{herp:0, derp:5, nerp:3, slerp:2, ferp:2.5}, {herp:5, derp:4, nerp:3, slerp:2, ferp:1}, {herp:1, derp:2, nerp:1, slerp:4, ferp:3.5}];
  var rc = new RadarChart(startX, startY, circleRad, rcData);
  rc.render(false);
  
  //render lexicle noise shape? noise is represenative of complexity
  var lexNoise = [0.3, 0.25, 0.1, 0.02, 0.5, 0.9];
  var lsp = new LexicleSphere(startX, startY, 50, lexNoise);
  lsp.render();
}


function makeRandomData(total){
  var z=0;
  var pts = new Array(0);
  for(var i=0; i < total; i++){
    pts.push(sin(z) + 2);
    z += random(0, 0.5);
  }
  return pts;
}

function draw() {
  
}